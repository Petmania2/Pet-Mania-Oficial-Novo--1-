<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Meus Agendamentos - Pet Mania</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: #f5f7fa;
            min-height: 100vh;
            color: #333;
        }

        .navbar {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 1rem 0;
            box-shadow: 0 2px 20px rgba(0,0,0,0.1);
            position: sticky;
            top: 0;
            z-index: 1000;
        }

        .navbar-container {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 2rem;
        }

        .logo img {
            height: 65px;
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 2rem;
            align-items: center;
        }

        .nav-links a {
            text-decoration: none;
            color: #333;
            font-weight: 500;
            padding: 0.5rem 1rem;
            border-radius: 25px;
            transition: all 0.3s ease;
        }

        .nav-links a:hover {
            background: #FFA500;
            color: white;
            transform: translateY(-2px);
        }

        .btn-logout {
            background: linear-gradient(45deg, #ff6b6b, #ee5a24);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 25px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        .page-header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            text-align: center;
        }

        .page-title {
            font-size: 2.5rem;
            font-weight: 700;
            color: #333;
            margin-bottom: 0.5rem;
        }

        .page-subtitle {
            color: #666;
            font-size: 1.1rem;
        }

        .calendar-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            margin-bottom: 2rem;
        }

        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

        .month-nav {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .nav-btn {
            background: #FFA500;
            color: white;
            border: none;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .nav-btn:hover {
            background: #FF8C00;
            transform: scale(1.1);
        }

        .current-month {
            font-size: 1.5rem;
            font-weight: 600;
            color: #333;
            min-width: 200px;
            text-align: center;
        }

        .calendar-grid {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 1px;
            background: #e0e0e0;
            border-radius: 10px;
            overflow: hidden;
        }

        .calendar-day-header {
            background: #FFA500;
            color: white;
            padding: 1rem;
            text-align: center;
            font-weight: 600;
            font-size: 0.9rem;
        }

        .calendar-day {
            background: white;
            padding: 1rem;
            min-height: 80px;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
        }

        .calendar-day:hover {
            background: #f8f9fa;
        }

        .calendar-day.other-month {
            background: #f5f5f5;
            color: #ccc;
        }

        .calendar-day.has-appointment {
            background: linear-gradient(45deg, #FFA500, #FF8C00);
            color: white;
            font-weight: 600;
        }

        .calendar-day.has-appointment:hover {
            background: linear-gradient(45deg, #FF8C00, #FF7700);
            transform: scale(1.05);
        }

        .day-number {
            font-size: 1.1rem;
            margin-bottom: 0.5rem;
        }

        .appointment-indicator {
            width: 8px;
            height: 8px;
            background: white;
            border-radius: 50%;
            margin-top: auto;
        }

        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 10000;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .modal.show {
            opacity: 1;
            visibility: visible;
        }

        .modal-content {
            background: white;
            border-radius: 20px;
            max-width: 500px;
            width: 90%;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
        }

        .modal-header {
            padding: 2rem;
            border-bottom: 2px solid #f0f0f0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: #333;
        }

        .btn-close {
            background: none;
            border: none;
            font-size: 2rem;
            cursor: pointer;
            color: #999;
            transition: all 0.3s ease;
        }

        .btn-close:hover {
            color: #333;
            transform: rotate(90deg);
        }

        .modal-body {
            padding: 2rem;
        }

        .appointment-details {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        .detail-item {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 10px;
        }

        .detail-icon {
            width: 40px;
            height: 40px;
            background: #FFA500;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
        }

        .detail-content h4 {
            color: #333;
            margin-bottom: 0.25rem;
        }

        .detail-content p {
            color: #666;
            font-size: 0.9rem;
        }

        .trainer-card {
            background: linear-gradient(45deg, #FFA500, #FF8C00);
            color: white;
            padding: 1.5rem;
            border-radius: 15px;
            margin-top: 1rem;
        }

        .trainer-info {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .trainer-avatar {
            width: 60px;
            height: 60px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            font-weight: 700;
        }

        .contact-buttons {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .btn-contact {
            padding: 0.75rem 1rem;
            border: none;
            border-radius: 10px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .btn-whatsapp {
            background: #25D366;
            color: white;
        }

        .btn-phone {
            background: #007bff;
            color: white;
        }

        .btn-contact:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }

        @media (max-width: 768px) {
            .navbar-container {
                padding: 0 1rem;
                flex-direction: column;
                gap: 1rem;
            }

            .nav-links {
                flex-wrap: wrap;
                justify-content: center;
            }

            .container {
                padding: 0 0.5rem;
            }

            .calendar-header {
                flex-direction: column;
                gap: 1rem;
            }

            .calendar-day {
                min-height: 60px;
                padding: 0.5rem;
            }

            .day-number {
                font-size: 1rem;
            }

            .contact-buttons {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar">
        <div class="navbar-container">
            <a href="/" class="logo">
                <img src="/imagens/petlogo.png" alt="Pet Mania">
            </a>
            <ul class="nav-links">
                <li><a href="/"><i class="fas fa-home"></i> Home</a></li>
                <li><a href="/painelcliente"><i class="fas fa-tachometer-alt"></i> Painel</a></li>
                <li><a href="/#find-trainer"><i class="fas fa-search"></i> Encontrar</a></li>
                <li><a href="/adestradores.ejs"><i class="fas fa-users"></i> Adestradores</a></li>
                <li><button onclick="logout()" class="btn-logout"><i class="fas fa-sign-out-alt"></i> Sair</button></li>
            </ul>
        </div>
    </nav>

    <div class="container">
        <!-- Page Header -->
        <div class="page-header">
            <h1 class="page-title"><i class="fas fa-calendar-alt"></i> Meus Agendamentos</h1>
            <p class="page-subtitle">Visualize e gerencie suas sessões de adestramento</p>
        </div>

        <!-- Calendar -->
        <div class="calendar-container">
            <div class="calendar-header">
                <div class="month-nav">
                    <button class="nav-btn" onclick="previousMonth()">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <h2 class="current-month" id="currentMonth"></h2>
                    <button class="nav-btn" onclick="nextMonth()">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
            </div>

            <div class="calendar-grid" id="calendarGrid">
                <!-- Calendar will be generated by JavaScript -->
            </div>
        </div>
    </div>

    <!-- Appointment Details Modal -->
    <div id="appointmentModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Detalhes do Agendamento</h3>
                <button class="btn-close" onclick="closeModal()">&times;</button>
            </div>
            <div class="modal-body">
                <div class="appointment-details" id="appointmentDetails">
                    <!-- Details will be populated by JavaScript -->
                </div>
            </div>
        </div>
    </div>

    <script>
        // Sample appointment data
        const appointments = {
            '2025-10-16': {
                time: '15:30',
                trainer: 'Marina Oliveira',
                trainerPhone: '(11) 98765-4321',
                address: 'Rua dos Pinheiros, 789 - Pinheiros, SP',
                pet: 'Buddy',
                service: 'Obediência Básica',
                notes: 'Sessão de reforço - trabalhar comando "fica" e "vem"'
            },
            '2025-10-23': {
                time: '14:00',
                trainer: 'Carlos Silva',
                trainerPhone: '(11) 99999-9999',
                address: 'Rua das Flores, 123 - Vila Madalena, SP',
                pet: 'Rex',
                service: 'Adestramento Básico',
                notes: 'Primeira sessão - avaliação comportamental'
            },
            '2025-10-30': {
                time: '16:30',
                trainer: 'Ana Costa',
                trainerPhone: '(11) 88888-8888',
                address: 'Parque Ibirapuera - Portão 7',
                pet: 'Luna',
                service: 'Socialização',
                notes: 'Trabalhar interação com outros cães'
            }
        };

        let currentDate = new Date(2025, 9, 1); // Outubro 2025 (mês 9 = outubro)
        const monthNames = [
            'Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho',
            'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'
        ];
        const dayNames = ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'];

        function generateCalendar() {
            const year = currentDate.getFullYear();
            const month = currentDate.getMonth();
            
            // Update month display
            document.getElementById('currentMonth').textContent = `${monthNames[month]} ${year}`;
            
            // Get first day of month and number of days
            const firstDay = new Date(year, month, 1).getDay();
            const daysInMonth = new Date(year, month + 1, 0).getDate();
            const daysInPrevMonth = new Date(year, month, 0).getDate();
            
            const calendarGrid = document.getElementById('calendarGrid');
            calendarGrid.innerHTML = '';
            
            // Add day headers
            dayNames.forEach(day => {
                const dayHeader = document.createElement('div');
                dayHeader.className = 'calendar-day-header';
                dayHeader.textContent = day;
                calendarGrid.appendChild(dayHeader);
            });
            
            // Add previous month's trailing days
            for (let i = firstDay - 1; i >= 0; i--) {
                const dayElement = createDayElement(daysInPrevMonth - i, true);
                calendarGrid.appendChild(dayElement);
            }
            
            // Add current month's days
            for (let day = 1; day <= daysInMonth; day++) {
                const dayElement = createDayElement(day, false);
                calendarGrid.appendChild(dayElement);
            }
            
            // Add next month's leading days
            const totalCells = calendarGrid.children.length - 7; // Subtract headers
            const remainingCells = 42 - totalCells; // 6 rows * 7 days
            for (let day = 1; day <= remainingCells; day++) {
                const dayElement = createDayElement(day, true);
                calendarGrid.appendChild(dayElement);
            }
        }

        function createDayElement(day, isOtherMonth) {
            const dayElement = document.createElement('div');
            dayElement.className = 'calendar-day';
            
            if (isOtherMonth) {
                dayElement.classList.add('other-month');
            }
            
            const dayNumber = document.createElement('div');
            dayNumber.className = 'day-number';
            dayNumber.textContent = day;
            dayElement.appendChild(dayNumber);
            
            // Check if this day has an appointment
            if (!isOtherMonth) {
                const dateString = formatDateString(currentDate.getFullYear(), currentDate.getMonth(), day);
                if (appointments[dateString]) {
                    dayElement.classList.add('has-appointment');
                    const indicator = document.createElement('div');
                    indicator.className = 'appointment-indicator';
                    dayElement.appendChild(indicator);
                    
                    dayElement.addEventListener('click', () => showAppointmentDetails(dateString));
                }
            }
            
            return dayElement;
        }

        function formatDateString(year, month, day) {
            return `${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;
        }

        function showAppointmentDetails(dateString) {
            const appointment = appointments[dateString];
            if (!appointment) return;
            
            const date = new Date(dateString);
            const formattedDate = `${date.getDate()} de ${monthNames[date.getMonth()]} de ${date.getFullYear()}`;
            
            const detailsContainer = document.getElementById('appointmentDetails');
            detailsContainer.innerHTML = `
                <div class="detail-item">
                    <div class="detail-icon">
                        <i class="fas fa-calendar"></i>
                    </div>
                    <div class="detail-content">
                        <h4>Data e Horário</h4>
                        <p>${formattedDate} às ${appointment.time}</p>
                    </div>
                </div>
                
                <div class="detail-item">
                    <div class="detail-icon">
                        <i class="fas fa-map-marker-alt"></i>
                    </div>
                    <div class="detail-content">
                        <h4>Local</h4>
                        <p>${appointment.address}</p>
                    </div>
                </div>
                
                <div class="detail-item">
                    <div class="detail-icon">
                        <i class="fas fa-paw"></i>
                    </div>
                    <div class="detail-content">
                        <h4>Pet</h4>
                        <p>${appointment.pet} - ${appointment.service}</p>
                    </div>
                </div>
                
                <div class="detail-item">
                    <div class="detail-icon">
                        <i class="fas fa-sticky-note"></i>
                    </div>
                    <div class="detail-content">
                        <h4>Observações</h4>
                        <p>${appointment.notes}</p>
                    </div>
                </div>
                
                <div class="trainer-card">
                    <div class="trainer-info">
                        <div class="trainer-avatar">
                            ${appointment.trainer.split(' ').map(n => n[0]).join('')}
                        </div>
                        <div>
                            <h3>${appointment.trainer}</h3>
                            <p>Adestrador Responsável</p>
                        </div>
                    </div>
                    
                    <div class="contact-buttons">
                        <button class="btn-contact btn-whatsapp" onclick="contactWhatsApp('${appointment.trainerPhone}')">
                            <i class="fab fa-whatsapp"></i>
                            WhatsApp
                        </button>
                        <button class="btn-contact btn-phone" onclick="contactPhone('${appointment.trainerPhone}')">
                            <i class="fas fa-phone"></i>
                            Ligar
                        </button>
                    </div>
                </div>
            `;
            
            document.getElementById('appointmentModal').classList.add('show');
        }

        function closeModal() {
            document.getElementById('appointmentModal').classList.remove('show');
        }

        function previousMonth() {
            currentDate.setMonth(currentDate.getMonth() - 1);
            generateCalendar();
        }

        function nextMonth() {
            currentDate.setMonth(currentDate.getMonth() + 1);
            generateCalendar();
        }

        function contactWhatsApp(phone) {
            const cleanPhone = phone.replace(/\D/g, '');
            window.open(`https://wa.me/55${cleanPhone}`, '_blank');
        }

        function contactPhone(phone) {
            window.open(`tel:${phone}`, '_self');
        }

        function logout() {
            if (confirm('Tem certeza que deseja sair?')) {
                fetch('/logout', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.sucesso) {
                        window.location.href = '/';
                    } else {
                        alert('Erro ao fazer logout');
                    }
                })
                .catch(error => {
                    console.error('Erro:', error);
                    window.location.href = '/';
                });
            }
        }

        // Close modal on outside click
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('modal')) {
                e.target.classList.remove('show');
            }
        });

        // Initialize calendar
        generateCalendar();
    </script>
</body>
</html>