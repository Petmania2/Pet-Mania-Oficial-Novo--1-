<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Premium - Pet Mania</title>
    <link rel="stylesheet" href="/css/painelcliente-clean.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>
<body>
    <!-- Navbar Premium -->
    <nav class="navbar">
        <div class="navbar-container">
            <a href="/" class="logo">
                <img src="/imagens/petlogo.png" alt="Pet Mania">
            </a>
            <ul class="nav-links">
                <li><a href="/">Home</a></li>
                <li><a href="/#find-trainer">Encontrar</a></li>
                <li><a href="/adestradores.ejs">Adestradores</a></li>
                <li><a href="#contact">Contato</a></li>
                <li><button onclick="logout()" class="btn-logout">Sair</button></li>
            </ul>
        </div>
    </nav>

    <!-- Dashboard Container -->
    <div class="dashboard-container">
        <!-- Header Compacto -->
        <div class="dashboard-header">
            <div class="user-info">
                <div class="avatar">
                    <%= cliente ? cliente.nome.split(' ').map(n => n[0]).join('') : 'U' %>
                </div>
                <div>
                    <h2>Ol√°, <%= cliente ? cliente.nome.split(' ')[0] : 'Usu√°rio' %>!</h2>
                    <p><%= cliente ? cliente.email : 'email@exemplo.com' %></p>
                </div>
            </div>
        </div>

        <!-- Cards Grid -->
        <div class="cards-grid">
            <!-- Meu Perfil Card -->
            <div class="card">
                <div class="card-header">
                    <i class="fas fa-user"></i>
                    <h3>Meu Perfil</h3>
                </div>
                <form action="/atualizar-cliente" method="POST">
                    <div class="form-group">
                        <input type="text" name="nome" value="<%= cliente ? cliente.nome : '' %>" placeholder="Nome completo" required>
                    </div>
                    <div class="form-group">
                        <input type="email" name="email" value="<%= cliente ? cliente.email : '' %>" placeholder="Email" required>
                    </div>
                    <button type="submit" class="btn-save">
                        <i class="fas fa-save"></i> Salvar
                    </button>
                </form>
            </div>

            <!-- Stats Card -->
            <div class="card">
                <div class="card-header">
                    <i class="fas fa-chart-bar"></i>
                    <h3>Estat√≠sticas</h3>
                </div>
                <div class="stats">
                    <div class="stat">
                        <span class="number">12</span>
                        <span class="label">Sess√µes</span>
                    </div>
                    <div class="stat">
                        <span class="number">3</span>
                        <span class="label">Pets</span>
                    </div>
                </div>
            </div>

            <!-- Pets Card -->
            <div class="card" data-tab="pets">
                <div class="card-header">
                    <i class="fas fa-paw"></i>
                    <h3>Meus Pets</h3>
                </div>
                <div class="pets-list">
                    <div class="pet-item">
                        <span>üêï Rex</span>
                        <small>Golden, 3 anos</small>
                    </div>
                    <div class="pet-item">
                        <span>üê± Luna</span>
                        <small>Persa, 2 anos</small>
                    </div>
                </div>
                <button class="btn-add" onclick="openAddPetModal()">
                    <i class="fas fa-plus"></i> Adicionar Pet
                </button>
            </div>

            <!-- A√ß√µes Card -->
            <div class="card">
                <div class="card-header">
                    <i class="fas fa-cog"></i>
                    <h3>A√ß√µes R√°pidas</h3>
                </div>
                <div class="actions">
                    <button class="action-btn" data-tab="sessions">
                        <i class="fas fa-calendar"></i> Sess√µes
                    </button>
                    <button class="action-btn" data-tab="payments">
                        <i class="fas fa-credit-card"></i> Pagamentos
                    </button>
                    <button class="action-btn" data-tab="security">
                        <i class="fas fa-shield-alt"></i> Seguran√ßa
                    </button>
                </div>
            </div>
        </div>

        <!-- Modal Sections -->
        <div id="sessions-modal" class="modal-content" style="display: none;">
            <h3>Minhas Sess√µes</h3>
            <p>Gerencie suas sess√µes de adestramento.</p>
        </div>

        <div id="payments-modal" class="modal-content" style="display: none;">
            <h3>Pagamentos</h3>
            <p>Hist√≥rico de pagamentos e m√©todos.</p>
        </div>

        <div id="security-modal" class="modal-content" style="display: none;">
            <h3>Seguran√ßa</h3>
            <input type="password" placeholder="Nova senha" id="new-password">
        </div>
    </div>

    <!-- Modal para Adicionar Pet -->
    <div id="addPetModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Adicionar Novo Pet</h3>
                <button class="btn-close" onclick="closeAddPetModal()">&times;</button>
            </div>
            <div class="modal-body">
                <form id="addPetForm">
                    <div class="form-group">
                        <label class="form-label">Nome do Pet</label>
                        <input type="text" class="form-input" id="petName" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Esp√©cie</label>
                        <select class="form-input" id="petSpecies" required>
                            <option value="">Selecione...</option>
                            <option value="dog">C√£o</option>
                            <option value="cat">Gato</option>
                            <option value="bird">P√°ssaro</option>
                            <option value="other">Outro</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Ra√ßa</label>
                        <input type="text" class="form-input" id="petBreed" required>
                    </div>
                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem;">
                        <div class="form-group">
                            <label class="form-label">Idade</label>
                            <input type="number" class="form-input" id="petAge" min="0" required>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Peso (kg)</label>
                            <input type="number" class="form-input" id="petWeight" min="0" step="0.1" required>
                        </div>
                    </div>
                    <button type="submit" class="btn-primary">
                        <i class="fas fa-plus"></i> Adicionar Pet
                    </button>
                </form>
            </div>
        </div>
    </div>

    <!-- Notification -->
    <div id="notification" class="notification">
        <i class="fas fa-check-circle"></i>
        <span id="notificationText">Opera√ß√£o realizada com sucesso!</span>
    </div>

    <script src="/js/perfilcliente.js"></script>
    <script>
        // Action buttons
        document.querySelectorAll('.action-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const tabId = this.getAttribute('data-tab');
                
                // Hide all modals
                document.querySelectorAll('[id$="-modal"]').forEach(modal => {
                    modal.style.display = 'none';
                });
                
                // Show selected modal
                const modal = document.getElementById(tabId + '-modal');
                if (modal) {
                    modal.style.display = 'block';
                }
            });
        });

        // Modal Functions
        function openAddPetModal() {
            document.getElementById('addPetModal').classList.add('show');
        }

        function closeAddPetModal() {
            document.getElementById('addPetModal').classList.remove('show');
        }

        // Add Pet Form
        document.getElementById('addPetForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const name = document.getElementById('petName').value;
            const species = document.getElementById('petSpecies').value;
            const breed = document.getElementById('petBreed').value;
            const age = document.getElementById('petAge').value;
            const weight = document.getElementById('petWeight').value;
            
            // Add pet to grid (simulation)
            const petsGrid = document.querySelector('.pets-grid');
            const addCard = petsGrid.querySelector('.add-pet-card');
            
            const newPetCard = document.createElement('div');
            newPetCard.className = 'pet-card';
            const emoji = species === 'dog' ? 'üêï' : species === 'cat' ? 'üê±' : species === 'bird' ? 'üê¶' : 'üêæ';
            newPetCard.innerHTML = `
                <div class="pet-avatar">${emoji}</div>
                <h3 class="pet-name">${name}</h3>
                <p class="pet-details">${breed} ‚Ä¢ ${age} anos ‚Ä¢ ${weight}kg</p>
            `;
            
            petsGrid.insertBefore(newPetCard, addCard);
            closeAddPetModal();
            showNotification('Pet adicionado com sucesso!');
            this.reset();
        });

        // Password Strength
        document.getElementById('new-password').addEventListener('input', function() {
            const password = this.value;
            let strength = 0;
            if (password.length > 0) strength++;
            if (password.length >= 8) strength++;
            if (/[A-Z]/.test(password) && /[a-z]/.test(password)) strength++;
            if (/[0-9]/.test(password)) strength++;
            if (/[^A-Za-z0-9]/.test(password)) strength++;
            strength = Math.min(strength, 4);
            
            const segments = document.querySelectorAll('.strength-segment');
            const strengthText = document.querySelector('.strength-text');
            const colors = ['#ddd', '#ff4d4d', '#ffa64d', '#ffff4d', '#4CAF50'];
            const texts = ['Digite uma nova senha', 'Muito fraca', 'Fraca', 'M√©dia', 'Forte'];
            
            segments.forEach((segment, index) => {
                segment.style.backgroundColor = index < strength ? colors[strength] : colors[0];
            });
            strengthText.textContent = texts[strength];
            strengthText.style.color = colors[strength];
        });

        // Notification
        function showNotification(message) {
            const notification = document.getElementById('notification');
            document.getElementById('notificationText').textContent = message;
            notification.classList.add('show');
            setTimeout(() => {
                notification.classList.remove('show');
            }, 3000);
        }

        // Logout Function
        function logout() {
            if (confirm('Tem certeza que deseja sair?')) {
                fetch('/logout', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.sucesso) {
                        window.location.href = '/';
                    } else {
                        alert('Erro ao fazer logout');
                    }
                })
                .catch(error => {
                    console.error('Erro:', error);
                    window.location.href = '/';
                });
            }
        }

        // Close modal on outside click
        document.getElementById('addPetModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeAddPetModal();
            }
        });
    </script>
</body>
</html>ick="openTrainers()">
                        <i class="fas fa-search"></i>
                        <h3>Buscar Adestradores</h3>
                        <p>Encontre profissionais pr√≥ximos</p>
                    </section>
                    
                    <section class="action-card" onclick="openHistory()">
                        <i class="fas fa-history"></i>
                        <h3>Hist√≥rico</h3>
                        <p>Veja seus agendamentos anteriores</p>
                    </section>
                </section>
                
                <!-- Mapa de Adestradores -->
                <section class="info-card" style="grid-column: 1 / -1; margin-top: 2rem;">
                    <h3><i class="fas fa-map-marker-alt"></i> Encontrar Adestradores Pr√≥ximos</h3>
                    
                    <section style="margin: 8px 0; display:flex; gap:8px; flex-wrap:wrap;">
                        <button id="btn-locate">Encontrar meu local</button>
                        <input id="address" type="text" placeholder="Digite um endere√ßo" style="min-width:200px; padding:6px;" />
                        <button id="btn-geocode">Buscar</button>
                        <label>Raio (km):
                            <input id="radius" type="number" value="5" min="0.1" step="0.1" style="width:60px; padding:4px;" />
                        </label>
                        <button id="btn-filter">Aplicar</button>
                    </section>

                    <section id="map" style="height: 400px; border: 1px solid #ccc; margin: 10px 0;"></section>
                    <section id="nearest"></section>
                </section>
            </section>
        </section>
    </section>

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script>
        let trainers = [
            { "id": 1, "name": "Jo√£o Silva", "lat": -23.55052, "lng": -46.633308, "info": "Especialista em obedi√™ncia b√°sica" },
            { "id": 2, "name": "Maria Santos", "lat": -23.5587, "lng": -46.6250, "info": "Comportamento agressivo" },
            { "id": 3, "name": "Carlos Oliveira", "lat": -23.5450, "lng": -46.6400, "info": "Adestramento domiciliar" }
        ];

        const map = L.map('map').setView([-23.55, -46.63], 13);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; OpenStreetMap contributors'
        }).addTo(map);

        let trainerMarkers = L.layerGroup().addTo(map);
        let userMarker = null;
        let currentUserLocation = null;

        function renderMarkers() {
            trainerMarkers.clearLayers();
            trainers.forEach(t => {
                L.marker([t.lat, t.lng]).addTo(trainerMarkers)
                    .bindPopup(`<strong>${t.name}</strong><br>${t.info}`);
            });
        }

        function haversine(lat1, lon1, lat2, lon2) {
            const R = 6371;
            const dLat = (lat2 - lat1) * Math.PI / 180;
            const dLon = (lon2 - lon1) * Math.PI / 180;
            const a = Math.sin(dLat/2) * Math.sin(dLat/2) +
                      Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *
                      Math.sin(dLon/2) * Math.sin(dLon/2);
            return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
        }

        function showNearest(userLat, userLng, radiusKm = null) {
            const distances = trainers.map(t => ({
                ...t,
                distance: haversine(userLat, userLng, t.lat, t.lng)
            })).sort((a,b) => a.distance - b.distance);
            
            let filtered = distances;
            if (radiusKm) {
                filtered = distances.filter(t => t.distance <= radiusKm);
            }
            
            const container = document.getElementById('nearest');
            if (!filtered.length) {
                container.innerHTML = '<p>Nenhum adestrador encontrado no raio selecionado.</p>';
                return;
            }
            
            container.innerHTML = '<h4>Adestradores pr√≥ximos:</h4>' +
                filtered.slice(0, 5).map(t => 
                    `<section style="padding:8px; border-bottom:1px solid #eee;">
                        <strong>${t.name}</strong> - ${t.distance.toFixed(2)} km<br>
                        <small>${t.info}</small>
                    </section>`
                ).join('');
        }

        document.getElementById('btn-locate').addEventListener('click', () => {
            if (!navigator.geolocation) return alert('Geolocaliza√ß√£o n√£o suportada.');
            navigator.geolocation.getCurrentPosition(pos => {
                const lat = pos.coords.latitude;
                const lng = pos.coords.longitude;
                if (userMarker) map.removeLayer(userMarker);
                userMarker = L.marker([lat, lng]).addTo(map).bindPopup('Voc√™ est√° aqui');
                map.setView([lat, lng], 13);
                currentUserLocation = { lat, lng };
                const radius = parseFloat(document.getElementById('radius').value);
                showNearest(lat, lng, radius);
            }, () => alert('Erro ao obter localiza√ß√£o'));
        });

        document.getElementById('btn-geocode').addEventListener('click', async () => {
            const address = document.getElementById('address').value.trim();
            if (!address) return alert('Digite um endere√ßo.');
            try {
                const url = `https://photon.komoot.io/api/?q=${encodeURIComponent(address)}&limit=1`;
                const res = await fetch(url);
                const data = await res.json();
                if (data.features?.length) {
                    const [lng, lat] = data.features[0].geometry.coordinates;
                    if (userMarker) map.removeLayer(userMarker);
                    userMarker = L.marker([lat, lng]).addTo(map).bindPopup('Localiza√ß√£o buscada');
                    map.setView([lat, lng], 13);
                    currentUserLocation = { lat, lng };
                    const radius = parseFloat(document.getElementById('radius').value);
                    showNearest(lat, lng, radius);
                } else {
                    alert('Endere√ßo n√£o encontrado.');
                }
            } catch (err) {
                alert('Erro na busca.');
            }
        });

        document.getElementById('btn-filter').addEventListener('click', () => {
            if (!currentUserLocation) return alert('Defina sua localiza√ß√£o primeiro.');
            const radius = parseFloat(document.getElementById('radius').value);
            showNearest(currentUserLocation.lat, currentUserLocation.lng, radius);
        });

        renderMarkers();
    </script>

    <script src="/js/ai-chat.js"></script>
    <script src="/js/script-painelcliente.js"></script>
    <link rel="stylesheet" href="/css/ai-chat.css">
    
    <script>
        function logout() {
            if (confirm('Tem certeza que deseja sair?')) {
                fetch('/logout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.sucesso) {
                        window.location.href = '/';
                    } else {
                        alert('Erro ao fazer logout');
                    }
                })
                .catch(error => {
                    console.error('Erro:', error);
                    window.location.href = '/';
                });
            }
        }
        
        // Fun√ß√µes dos bot√µes
        function openMyPets() {
            window.location.href = '/meuspets.ejs';
        }
        
        function openAccountSettings() {
            window.location.href = '/perfilcliente.ejs';
        }
        
        function openTrainers() {
            window.location.href = '/#trainers';
        }
        
        function openHistory() {
            alert('Funcionalidade "Hist√≥rico" em desenvolvimento!');
        }
    </script>