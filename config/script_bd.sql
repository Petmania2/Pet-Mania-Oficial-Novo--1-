-- ============================================
-- PET MANIA - SCRIPT RAILWAY
-- ============================================
-- Executar no Railway MySQL

-- 1. USAR DATABASE RAILWAY
USE railway;

-- 2. CRIAR TABELA DE IMAGENS
DROP TABLE IF EXISTS IMAGENS;
CREATE TABLE IMAGENS (
    ID_IMAGEM INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    NOME_IMAGEM VARCHAR(255) NOT NULL,
    IMAGEM_BLOB LONGBLOB,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Inserir imagem padrão
INSERT INTO IMAGENS (ID_IMAGEM, NOME_IMAGEM, IMAGEM_BLOB) 
VALUES (0, 'default.png', NULL);

-- 3. CRIAR TABELA DE USUÁRIOS
DROP TABLE IF EXISTS USUARIOS;
CREATE TABLE USUARIOS (
    ID_USUARIO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    NOME_USUARIO VARCHAR(100) NOT NULL,
    EMAIL_USUARIO VARCHAR(100) UNIQUE NOT NULL,
    CELULAR_USUARIO CHAR(11) NOT NULL,
    CPF_USUARIO CHAR(11) UNIQUE NOT NULL,
    SENHA_USUARIO VARCHAR(255) NOT NULL,
    TIPO_USUARIO CHAR(1) NOT NULL COMMENT 'A=Adestrador, C=Cliente',
    DATA_NASC_USUARIO DATE NOT NULL,
    ID_PERFIL INT UNSIGNED DEFAULT 0,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_PERFIL) REFERENCES IMAGENS (ID_IMAGEM),
    INDEX idx_email (EMAIL_USUARIO),
    INDEX idx_tipo (TIPO_USUARIO)
);

-- 4. CRIAR TABELA DE ESPECIALIDADES
DROP TABLE IF EXISTS ESPECIALIDADES_ADESTRADORES;
CREATE TABLE ESPECIALIDADES_ADESTRADORES (
    id_esp_adestrador INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    nome_esp_adestrador VARCHAR(40) NOT NULL UNIQUE
);

INSERT INTO ESPECIALIDADES_ADESTRADORES (nome_esp_adestrador) VALUES
('Obediência Básica'),
('Problemas de Comportamento'),
('Truques e Comandos'),
('Controle de Agressividade'),
('Treinamento de Filhotes');

-- 5. CRIAR TABELA DE ADESTRADORES
DROP TABLE IF EXISTS adestradores;
CREATE TABLE adestradores (
    id_adestrador INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    ID_USUARIO INT UNSIGNED NOT NULL UNIQUE,
    logradouro_adestrador VARCHAR(100),
    num_resid_adestrador VARCHAR(6) DEFAULT 'S/N',
    complemento_adestrador VARCHAR(50) DEFAULT '',
    bairro_adestrador VARCHAR(30) DEFAULT '',
    cidade_adestrador VARCHAR(30) DEFAULT '',
    uf_adestrador CHAR(2) DEFAULT 'SP',
    cep_ADESTRADOR CHAR(8) DEFAULT '00000000',
    anos_experiencia INT DEFAULT 0,
    id_esp_adestrador INT UNSIGNED DEFAULT 1,
    valor_sessao DECIMAL(10,2) NOT NULL,
    sobre_sua_experiencia TEXT,
    data_cadastro DATETIME DEFAULT CURRENT_TIMESTAMP,
    ativo BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS (ID_USUARIO) ON DELETE CASCADE,
    FOREIGN KEY (id_esp_adestrador) REFERENCES ESPECIALIDADES_ADESTRADORES (id_esp_adestrador),
    INDEX idx_cidade (cidade_adestrador),
    INDEX idx_ativo (ativo)
);

-- 6. CRIAR TABELA DE CLIENTES
DROP TABLE IF EXISTS clientes;
CREATE TABLE clientes (
    id_cliente INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    ID_USUARIO INT UNSIGNED NOT NULL UNIQUE,
    logradouro_cliente VARCHAR(100),
    num_resid_cliente VARCHAR(6) DEFAULT 'S/N',
    complemento_cliente VARCHAR(50) DEFAULT '',
    bairro_cliente VARCHAR(30) DEFAULT '',
    cidade_cliente VARCHAR(30) DEFAULT '',
    uf_cliente CHAR(2) DEFAULT 'SP',
    cep_cliente CHAR(8) DEFAULT '00000000',
    data_cadastro DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS (ID_USUARIO) ON DELETE CASCADE,
    INDEX idx_cidade (cidade_cliente)
);

-- 7. CRIAR TABELA DE RAÇAS
DROP TABLE IF EXISTS RACA_PET;
CREATE TABLE RACA_PET (
    ID_RACA INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    NOME_RACA VARCHAR(50) NOT NULL UNIQUE
);

-- Inserir algumas raças padrão
INSERT INTO RACA_PET (NOME_RACA) VALUES
('Labrador'),
('Poodle'),
('Golden Retriever'),
('Bulldog'),
('Shih Tzu'),
('Husky'),
('Pastor Alemão'),
('Beagle'),
('Dálmata'),
('Pinscher'),
('SRD (Sem Raça Definida)');

-- 8. CRIAR TABELA DE PETS
DROP TABLE IF EXISTS PETS;
CREATE TABLE PETS (
    ID_PET INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    ID_USUARIO INT UNSIGNED NOT NULL,
    NOME_PET VARCHAR(100) NOT NULL,
    RACA_PET VARCHAR(100) NOT NULL,
    IDADE_PET VARCHAR(50) NOT NULL,
    SEXO_PET VARCHAR(20),
    TIPO_ADESTRAMENTO VARCHAR(100),
    PROBLEMA_COMPORTAMENTO TEXT,
    OBSERVACOES TEXT,
    FOTO_PET LONGBLOB,
    DATA_CADASTRO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO) ON DELETE CASCADE,
    INDEX idx_usuario (ID_USUARIO)
);

-- 9. CRIAR TABELA DE PEDIGREE
DROP TABLE IF EXISTS PEDIGREE;
CREATE TABLE PEDIGREE (
    ID_PEDIGREE INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    COD_AUTENTICIDADE_PEDIGREE VARCHAR(10) UNIQUE,
    COD_MICROCHIP_PEDIGREE CHAR(15) UNIQUE,
    ID_PET INT UNSIGNED NOT NULL,
    FOREIGN KEY (ID_PET) REFERENCES PETS(ID_PET) ON DELETE CASCADE
);

-- 10. CRIAR TABELA DE DISPONIBILIDADE
DROP TABLE IF EXISTS disponibilidade_adestrador;
CREATE TABLE disponibilidade_adestrador (
    ID_AGENDA INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    DIA_SEMANA INT NOT NULL,
    ID_ADESTRADOR INT UNSIGNED NOT NULL,
    HR_INICIO TIME NOT NULL,
    HR_FIM TIME NOT NULL,
    DURACAO_SESSAO INT NOT NULL,
    PRECO_SESSAO DECIMAL(6,2) NOT NULL,
    TAXA_LOCOMOCAO_SESSSAO DECIMAL(5,2),
    DT_TAXA_LOCOMOCAO DATE NOT NULL,
    FOREIGN KEY (ID_ADESTRADOR) REFERENCES adestradores (ID_ADESTRADOR) ON DELETE CASCADE,
    INDEX idx_adestrador (ID_ADESTRADOR),
    INDEX idx_dia (DIA_SEMANA)
);

-- 11. CRIAR TABELA DE ADMINISTRADORES
DROP TABLE IF EXISTS ADMINISTRADORES;
CREATE TABLE ADMINISTRADORES (
    ID_ADM INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    ID_USUARIO INT UNSIGNED NOT NULL UNIQUE,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS (ID_USUARIO) ON DELETE CASCADE
);

-- 12. CRIAR TABELA DE CURSOS
DROP TABLE IF EXISTS CURSOS;
CREATE TABLE CURSOS (
    ID_CURSO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    NOME_CURSO VARCHAR(50) NOT NULL,
    DURACAO_CURSO INT
);

-- 13. CRIAR TABELA DE INSTITUIÇÕES
DROP TABLE IF EXISTS INSTITUICOES;
CREATE TABLE INSTITUICOES (
    ID_INSTITUICAO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    RAZAO_SOCIAL VARCHAR(80) NOT NULL,
    CNPJ_INSTITUICAO CHAR(14) NOT NULL UNIQUE,
    ENDERECO_INSTITUICAO VARCHAR(120) NOT NULL,
    BAIRRO_INSTITUICAO VARCHAR(30) NOT NULL,
    CIDADE_INSTITUICAO VARCHAR(30) NOT NULL,
    UF_INSTITUICAO CHAR(2) NOT NULL,
    CEP_INSTITUICAO CHAR(8) NOT NULL,
    ID_CURSO INT UNSIGNED,
    FOREIGN KEY (ID_CURSO) REFERENCES CURSOS (ID_CURSO)
);

-- 14. CRIAR TABELA DE CERTIFICADOS
DROP TABLE IF EXISTS CERTIFICADO;
CREATE TABLE CERTIFICADO (
    ID_CERTIFICADO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    CNAE CHAR(7) UNIQUE NOT NULL,
    id_adestrador INT UNSIGNED NOT NULL,
    FOREIGN KEY (ID_ADESTRADOR) REFERENCES adestradores (ID_ADESTRADOR) ON DELETE CASCADE
);

-- 15. CRIAR TABELA DE CONVERSAS (CHAT)
DROP TABLE IF EXISTS conversas;
CREATE TABLE conversas (
    id_conversa INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    id_cliente INT UNSIGNED NOT NULL,
    id_adestrador INT UNSIGNED NOT NULL,
    data_inicio TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ultima_mensagem TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    status ENUM('ativa', 'encerrada') DEFAULT 'ativa',
    FOREIGN KEY (id_cliente) REFERENCES clientes(id_cliente) ON DELETE CASCADE,
    FOREIGN KEY (id_adestrador) REFERENCES adestradores(id_adestrador) ON DELETE CASCADE,
    INDEX idx_cliente (id_cliente),
    INDEX idx_adestrador (id_adestrador),
    UNIQUE KEY unique_conversa (id_cliente, id_adestrador)
);

-- 16. CRIAR TABELA DE MENSAGENS (CHAT)
DROP TABLE IF EXISTS mensagens;
CREATE TABLE mensagens (
    id_mensagem INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    id_conversa INT UNSIGNED NOT NULL,
    id_remetente INT UNSIGNED NOT NULL,
    mensagem TEXT NOT NULL,
    data_envio TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    lida BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (id_conversa) REFERENCES conversas(id_conversa) ON DELETE CASCADE,
    FOREIGN KEY (id_remetente) REFERENCES USUARIOS(ID_USUARIO) ON DELETE CASCADE,
    INDEX idx_conversa (id_conversa),
    INDEX idx_data (data_envio)
);

-- ============================================
-- VERIFICAÇÃO FINAL
-- ============================================

-- Verificar se todas as tabelas foram criadas
SHOW TABLES;

-- Verificar estrutura da tabela USUARIOS
DESCRIBE USUARIOS;

-- Verificar especialidades
SELECT * FROM ESPECIALIDADES_ADESTRADORES;

-- Verificar imagem padrão
SELECT * FROM IMAGENS WHERE ID_IMAGEM = 0;

-- ============================================
-- SCRIPT CONCLUÍDO COM SUCESSO! ✅
-- ============================================