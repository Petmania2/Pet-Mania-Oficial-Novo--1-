-- ============================================
-- SCRIPT COMPLETO - PET MANIA ATUALIZADO
-- ============================================
-- EXECUTE TUDO DE UMA VEZ!

-- 1. DELETAR BANCO ANTIGO E CRIAR NOVO
DROP DATABASE IF EXISTS pet_mania;
CREATE DATABASE pet_mania CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE pet_mania;

-- 2. CRIAR TABELA DE IMAGENS (deve ser criada ANTES)
CREATE TABLE IF NOT EXISTS IMAGENS (
    ID_IMAGEM INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    NOME_IMAGEM VARCHAR(255) NOT NULL,
    IMAGEM_BLOB LONGBLOB
);

INSERT INTO IMAGENS (ID_IMAGEM, NOME_IMAGEM, IMAGEM_BLOB) 
VALUES (0, 'default.png', NULL);

-- 3. CRIAR TABELA DE USUÁRIOS
CREATE TABLE IF NOT EXISTS USUARIOS (
    ID_USUARIO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    NOME_USUARIO VARCHAR(100) NOT NULL,
    EMAIL_USUARIO VARCHAR(100) UNIQUE NOT NULL,
    CELULAR_USUARIO CHAR(11) NOT NULL,
    CPF_USUARIO CHAR(11) UNIQUE NOT NULL,
    SENHA_USUARIO VARCHAR(255) NOT NULL,
    TIPO_USUARIO CHAR(1) NOT NULL,
    DATA_NASC_USUARIO DATE NOT NULL,
    ID_PERFIL INT UNSIGNED NOT NULL DEFAULT 0,
    FOREIGN KEY (ID_PERFIL) REFERENCES IMAGENS (ID_IMAGEM)
);

-- 4. CRIAR TABELA DE ESPECIALIDADES
CREATE TABLE IF NOT EXISTS ESPECIALIDADES_ADESTRADORES (
    id_esp_adestrador INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    nome_esp_adestrador VARCHAR(40) NOT NULL
);

-- Inserir especialidades padrão
INSERT INTO ESPECIALIDADES_ADESTRADORES (nome_esp_adestrador) VALUES
('Obediência Básica'),
('Problemas de Comportamento'),
('Truques e Comandos'),
('Controle de Agressividade'),
('Treinamento de Filhotes');

-- 5. CRIAR TABELA DE ADESTRADORES
CREATE TABLE IF NOT EXISTS adestradores (
    id_adestrador INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    ID_USUARIO INT UNSIGNED NOT NULL,
    logradouro_adestrador VARCHAR(100),
    num_resid_adestrador VARCHAR(6) NOT NULL DEFAULT 'S/N',
    complemento_adestrador VARCHAR(50) DEFAULT '',
    bairro_adestrador VARCHAR(30) NOT NULL DEFAULT '',
    cidade_adestrador VARCHAR(30) NOT NULL DEFAULT '',
    uf_adestrador CHAR(2) NOT NULL DEFAULT 'SP',
    cep_ADESTRADOR CHAR(8) NOT NULL DEFAULT '00000000',
    anos_experiencia INT NOT NULL DEFAULT 0,
    id_esp_adestrador INT UNSIGNED NOT NULL DEFAULT 1,
    valor_sessao DECIMAL(10,2) NOT NULL,
    sobre_sua_experiencia TEXT,
    data_cadastro DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    ativo BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS (ID_USUARIO) ON DELETE CASCADE,
    FOREIGN KEY (id_esp_adestrador) REFERENCES ESPECIALIDADES_ADESTRADORES (id_esp_adestrador)
);

-- 6. CRIAR TABELA DE CLIENTES
CREATE TABLE IF NOT EXISTS clientes (
    id_cliente INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    ID_USUARIO INT UNSIGNED NOT NULL,
    logradouro_cliente VARCHAR(100),
    num_resid_cliente VARCHAR(6) NOT NULL DEFAULT 'S/N',
    complemento_cliente VARCHAR(50) DEFAULT '',
    bairro_paciente VARCHAR(30) NOT NULL DEFAULT '',
    cidade_paciente VARCHAR(30) NOT NULL DEFAULT '',
    uf_paciente CHAR(2) NOT NULL DEFAULT 'SP',
    cep_paciente CHAR(8) NOT NULL DEFAULT '00000000',
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS (ID_USUARIO) ON DELETE CASCADE
);

-- 7. CRIAR TABELA DE RAÇAS DE PETS
CREATE TABLE IF NOT EXISTS RACA_PET (
    ID_RACA INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    NOME_RACA VARCHAR(50) NOT NULL
);

-- 8. CRIAR TABELA DE PETS
CREATE TABLE IF NOT EXISTS PETS (
    ID_PET INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    NOME_PET VARCHAR(50) NOT NULL,
    RACA_PET VARCHAR(100),
    VACINACAO_PET BOOLEAN DEFAULT FALSE,
    DATA_NASC_PET DATE,
    ID_CLIENTE INT UNSIGNED NOT NULL,
    ID_RACA INT UNSIGNED,
    FOREIGN KEY (ID_CLIENTE) REFERENCES clientes(ID_CLIENTE) ON DELETE CASCADE,
    FOREIGN KEY (ID_RACA) REFERENCES RACA_PET(ID_RACA)
);

-- 9. CRIAR TABELA DE PEDIGREE
CREATE TABLE IF NOT EXISTS PEDIGREE (
    ID_PEDIGREE INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    COD_AUTENTICIDADE_PEDIGREE VARCHAR(10) UNIQUE,
    COD_MICROCHIP_PEDIGREE CHAR(15) UNIQUE,
    ID_PET INT UNSIGNED NOT NULL,
    FOREIGN KEY (ID_PET) REFERENCES PETS(ID_PET) ON DELETE CASCADE
);

-- 10. CRIAR TABELA DE DISPONIBILIDADE DO ADESTRADOR
CREATE TABLE IF NOT EXISTS disponibilidade_adestrador (
    ID_AGENDA INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    DIA_SEMANA INT NOT NULL,
    ID_ADESTRADOR INT UNSIGNED NOT NULL,
    HR_INICIO TIME NOT NULL,
    HR_FIM TIME NOT NULL,
    DURACAO_SESSAO INT NOT NULL,
    PRECO_SESSAO DECIMAL(6,2) NOT NULL,
    TAXA_LOCOMOCAO_SESSSAO DECIMAL(5,2),
    DT_TAXA_LOCOMOCAO DATE NOT NULL,
    FOREIGN KEY (ID_ADESTRADOR) REFERENCES adestradores (ID_ADESTRADOR) ON DELETE CASCADE
);

-- 11. CRIAR TABELA DE ADMINISTRADORES
CREATE TABLE IF NOT EXISTS ADMINISTRADORES (
    ID_ADM INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    ID_USUARIO INT UNSIGNED NOT NULL,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS (ID_USUARIO) ON DELETE CASCADE
);

-- 12. CRIAR TABELA DE CURSOS
CREATE TABLE IF NOT EXISTS CURSOS (
    ID_CURSO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    NOME_CURSO VARCHAR(50),
    DURACAO_CURSO INT
);

-- 13. CRIAR TABELA DE INSTITUIÇÕES
CREATE TABLE IF NOT EXISTS INSTITUICOES (
    ID_INSTITUICAO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    RAZAO_SOCIAL VARCHAR(80) NOT NULL,
    CNPJ_INSTITUICAO CHAR(14) NOT NULL,
    ENDERECO_INSTITUICAO VARCHAR(120) NOT NULL,
    BAIRRO_INSTITUICAO VARCHAR(30) NOT NULL,
    CIDADE_INSTITUICAO VARCHAR(30) NOT NULL,
    UF_INSTITUICAO CHAR(2) NOT NULL,
    CEP_INSTITUICAO CHAR(8) NOT NULL,
    ID_CURSO INT UNSIGNED NOT NULL,
    FOREIGN KEY (ID_CURSO) REFERENCES CURSOS (ID_CURSO)
);

-- 14. CRIAR TABELA DE CERTIFICADOS
CREATE TABLE IF NOT EXISTS CERTIFICADO (
    ID_CERTIFICADO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    CNAE CHAR(7) UNIQUE NOT NULL,
    id_adestrador INT UNSIGNED NOT NULL,
    FOREIGN KEY (ID_ADESTRADOR) REFERENCES adestradores (ID_ADESTRADOR) ON DELETE CASCADE
);

-- ============================================
-- SCRIPT FINALIZADO COM SUCESSO!
-- ============================================