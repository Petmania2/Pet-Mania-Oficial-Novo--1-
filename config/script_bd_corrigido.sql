-- Script corrigido para criar as tabelas do Pet Mania
CREATE TABLE USUARIOS (
    ID_USUARIO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    NOME_USUARIO VARCHAR(70) NOT NULL,
    EMAIL_USUARIO VARCHAR(100) UNIQUE NOT NULL,
    CELULAR_USUARIO CHAR(11) NOT NULL,
    CPF_USUARIO CHAR(11) UNIQUE NOT NULL,
    SENHA_USUARIO VARCHAR(255) NOT NULL, -- Removido UNIQUE e aumentado tamanho para hash
    TIPO_USUARIO CHAR(1) NOT NULL CHECK (TIPO_USUARIO IN ('A', 'C')),
    DATA_NASC_USUARIO DATE NOT NULL,
    DATA_CADASTRO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ATIVO BOOLEAN DEFAULT TRUE,
    ID_PERFIL INT UNSIGNED DEFAULT NULL,
    INDEX idx_email (EMAIL_USUARIO),
    INDEX idx_cpf (CPF_USUARIO),
    FOREIGN KEY (ID_PERFIL) REFERENCES IMAGENS (ID_IMAGEM)
);

CREATE TABLE IMAGENS (
    ID_IMAGEM INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    NOME_IMAGEM VARCHAR(255) NOT NULL,
    IMAGEM_BLOB BLOB,
    DATA_UPLOAD TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Criar tabela de ESPECIALIDADES ADESTRADORES
CREATE TABLE IF NOT EXISTS ESPECIALIDADES_ADESTRADORES (
    id_esp_adestrador INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    nome_esp_adestrador VARCHAR(40) NOT NULL UNIQUE
);

-- Inserir especialidades padrão
INSERT INTO ESPECIALIDADES_ADESTRADORES (nome_esp_adestrador) VALUES 
('Adestramento Básico'),
('Comportamento Canino'),
('Agility'),
('Cães de Guarda'),
('Socialização');

-- Criar tabela de adestradores (corrigida)
CREATE TABLE IF NOT EXISTS adestradores (
    id_adestrador INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    logradouro_adestrador VARCHAR(100),
    num_resid_adestrador VARCHAR(10) NOT NULL,
    complemento_adestrador VARCHAR(50),
    bairro_adestrador VARCHAR(30) NOT NULL,
    cidade_adestrador VARCHAR(30) NOT NULL,
    uf_adestrador CHAR(2) NOT NULL,
    cep_adestrador CHAR(8) NOT NULL,
    ID_USUARIO INT UNSIGNED NOT NULL,
    anos_experiencia INT NOT NULL DEFAULT 0,
    id_esp_adestrador INT UNSIGNED NOT NULL DEFAULT 1,
    valor_sessao DECIMAL(10,2) NOT NULL,
    sobre_sua_experiencia TEXT,
    data_cadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ativo BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS (ID_USUARIO) ON DELETE CASCADE,
    FOREIGN KEY (id_esp_adestrador) REFERENCES ESPECIALIDADES_ADESTRADORES (id_esp_adestrador),
    INDEX idx_cidade (cidade_adestrador),
    INDEX idx_ativo (ativo)
);

-- Criar tabela de clientes (corrigida)
CREATE TABLE IF NOT EXISTS clientes (
    id_cliente INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    logradouro_cliente VARCHAR(100),
    num_resid_cliente VARCHAR(10) NOT NULL,
    complemento_cliente VARCHAR(50),
    bairro_cliente VARCHAR(30) NOT NULL, -- Corrigido de bairro_paciente
    cidade_cliente VARCHAR(30) NOT NULL, -- Corrigido de cidade_paciente
    uf_cliente CHAR(2) NOT NULL, -- Corrigido de uf_paciente
    cep_cliente CHAR(8) NOT NULL, -- Corrigido de cep_paciente
    ID_USUARIO INT UNSIGNED NOT NULL,
    data_cadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS (ID_USUARIO) ON DELETE CASCADE,
    INDEX idx_cidade (cidade_cliente)
);

-- Tabela de sessões para segurança
CREATE TABLE IF NOT EXISTS sessoes_usuario (
    id_sessao VARCHAR(128) PRIMARY KEY,
    id_usuario INT UNSIGNED NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    data_expiracao TIMESTAMP NOT NULL,
    ip_address VARCHAR(45),
    user_agent TEXT,
    ativo BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (id_usuario) REFERENCES USUARIOS (ID_USUARIO) ON DELETE CASCADE,
    INDEX idx_usuario (id_usuario),
    INDEX idx_expiracao (data_expiracao)
);

-- Tabela de tentativas de login para segurança
CREATE TABLE IF NOT EXISTS tentativas_login (
    id_tentativa INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    email_tentativa VARCHAR(100) NOT NULL,
    ip_address VARCHAR(45) NOT NULL,
    sucesso BOOLEAN NOT NULL,
    data_tentativa TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_email_ip (email_tentativa, ip_address),
    INDEX idx_data (data_tentativa)
);

-- Resto das tabelas (mantidas como estavam)
CREATE TABLE disponibilidade_adestrador(
   ID_AGENDA INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
   DIA_SEMANA INT NOT NULL CHECK (DIA_SEMANA BETWEEN 0 AND 6),
   ID_ADESTRADOR INT UNSIGNED NOT NULL,
   HR_INICIO TIME NOT NULL,
   HR_FIM TIME NOT NULL,
   DURACAO_SESSAO INT NOT NULL,
   PRECO_SESSAO DECIMAL(6,2) NOT NULL,
   TAXA_LOCOMOCAO_SESSSAO DECIMAL(5,2),
   DT_TAXA_LOCOMOCAO DATE NOT NULL,
   FOREIGN KEY (ID_ADESTRADOR) REFERENCES adestradores (ID_ADESTRADOR) ON DELETE CASCADE
);

CREATE TABLE ADMINISTRADORES(
    ID_ADM INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    ID_USUARIO INT UNSIGNED NOT NULL,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS (ID_USUARIO) ON DELETE CASCADE
);

CREATE TABLE RACA_PET (
    ID_RACA INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    NOME_RACA VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE PETS (
    ID_PET INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    NOME_PET VARCHAR(50) NOT NULL,
    RACA_PET VARCHAR(100),
    VACINACAO_PET BOOLEAN DEFAULT FALSE,
    DATA_NASC_PET DATE,
    ID_CLIENTE INT UNSIGNED NOT NULL,
    ID_RACA INT UNSIGNED NOT NULL,
    FOREIGN KEY (ID_CLIENTE) REFERENCES clientes(ID_CLIENTE) ON DELETE CASCADE,
    FOREIGN KEY (ID_RACA) REFERENCES RACA_PET(ID_RACA)
);

CREATE TABLE PEDIGREE (
    ID_PEDIGREE INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    COD_AUTENTICIDADE_PEDIGREE VARCHAR(10) UNIQUE,
    COD_MICROCHIP_PEDIGREE CHAR(15) UNIQUE,
    ID_PET INT UNSIGNED NOT NULL,
    FOREIGN KEY (ID_PET) REFERENCES PETS(ID_PET) ON DELETE CASCADE
);

CREATE TABLE CERTIFICADO (
    ID_CERTIFICADO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    CNAE CHAR(7) UNIQUE NOT NULL,
    id_adestrador INT UNSIGNED NOT NULL,
    FOREIGN KEY (ID_ADESTRADOR) REFERENCES adestradores (ID_ADESTRADOR) ON DELETE CASCADE
);

CREATE TABLE CURSOS (
    ID_CURSO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    NOME_CURSO VARCHAR(50) NOT NULL,
    DURACAO_CURSO INT NOT NULL
);

CREATE TABLE INSTITUICOES (
    ID_INSTITUICAO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    RAZAO_SOCIAL VARCHAR(80) NOT NULL,
    CNPJ_INSTITUICAO CHAR(14) NOT NULL UNIQUE,
    ENDERECO_INSTITUICAO VARCHAR(120) NOT NULL,
    BAIRRO_INSTITUICAO VARCHAR(30) NOT NULL,
    CIDADE_INSTITUICAO VARCHAR(30) NOT NULL,
    UF_INSTITUICAO CHAR(2) NOT NULL,
    CEP_INSTITUICAO CHAR(8) NOT NULL,
    ID_CURSO INT UNSIGNED NOT NULL,
    FOREIGN KEY (ID_CURSO) REFERENCES CURSOS (ID_CURSO) ON DELETE CASCADE
);